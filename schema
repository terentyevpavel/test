
# ДАТАЛОГИЧЕСКАЯ МОДЕЛЬ БАЗЫ ДАННЫХ ДЛЯ ERP СИСТЕМЫ

═══════════════════════════════════════════════════════════════════════════════
ОПИСАНИЕ ДАТАЛОГИЧЕСКОЙ СХЕМЫ
═══════════════════════════════════════════════════════════════════════════════

Даталогическая модель представляет собой описание базы данных, выполненное в 
терминах реляционной модели данных для PostgreSQL СУБД. Модель описывает 
структуру данных, типы полей, ключи и связи между таблицами.


═══════════════════════════════════════════════════════════════════════════════
1. ТАБЛИЦА: customers (Клиенты)
═══════════════════════════════════════════════════════════════════════════════

Назначение: Хранение информации о клиентах (физических и юридических лиц)

┌──────────────────────┬────────────────────┬──────────┬──────┬──────────────┐
│ Наименование         │ Идентификатор      │ Тип      │ Длина│ Ограничения  │
│ реквизита            │                    │          │      │ и комментарий│
├──────────────────────┼────────────────────┼──────────┼──────┼──────────────┤
│ ID клиента           │ id                 │ BIGSERIAL│  8   │ PK, NOT NULL │
│ Наименование         │ name               │ VARCHAR  │ 255  │ NOT NULL     │
│                      │                    │          │      │ INDEX        │
│ Юридическое имя      │ legal_name         │ VARCHAR  │ 255  │ NULL         │
│ Адрес                │ address            │ TEXT     │  -   │ NOT NULL     │
│ Город                │ city               │ VARCHAR  │ 100  │ NULL         │
│ Почтовый индекс      │ postal_code        │ VARCHAR  │  20  │ NULL         │
│ Страна               │ country            │ VARCHAR  │ 100  │ DEFAULT      │
│                      │                    │          │      │ 'Россия'     │
│ Телефон              │ phone              │ VARCHAR  │  50  │ NULL         │
│ Email                │ email              │ VARCHAR  │ 255  │ NULL, INDEX  │
│ Тип клиента          │ customer_type      │ VARCHAR  │  50  │ CHECK        │
│ ИНН                  │ inn                │ VARCHAR  │  50  │ NULL         │
│ КПП                  │ kpp                │ VARCHAR  │  50  │ NULL         │
│ Дата создания        │ created_at         │ TIMESTAMP│  -   │ DEFAULT NOW()│
│ Дата обновления      │ updated_at         │ TIMESTAMP│  -   │ DEFAULT NOW()│
└──────────────────────┴────────────────────┴──────────┴──────┴──────────────┘

Первичный ключ (PK): id
Индексы: 
  - idx_customers_name ON (name)
  - idx_customers_email ON (email)

Ограничения целостности:
  - CHECK (customer_type IN ('физ.лицо', 'юр.лицо'))


═══════════════════════════════════════════════════════════════════════════════
2. ТАБЛИЦА: categories (Категории товаров)
═══════════════════════════════════════════════════════════════════════════════

Назначение: Иерархическое дерево категорий с неограниченной вложенностью
Реализация: Adjacency List (список смежности)

┌──────────────────────┬────────────────────┬──────────┬──────┬──────────────┐
│ Наименование         │ Идентификатор      │ Тип      │ Длина│ Ограничения  │
│ реквизита            │                    │          │      │ и комментарий│
├──────────────────────┼────────────────────┼──────────┼──────┼──────────────┤
│ ID категории         │ id                 │ BIGSERIAL│  8   │ PK, NOT NULL │
│ Наименование         │ name               │ VARCHAR  │ 255  │ NOT NULL     │
│ ID родительской      │ parent_id          │ BIGINT   │  8   │ FK, NULL     │
│ категории            │                    │          │      │ REFERENCES   │
│                      │                    │          │      │ categories   │
│                      │                    │          │      │ ON DELETE    │
│                      │                    │          │      │ CASCADE      │
│                      │                    │          │      │ INDEX        │
│ Уровень вложенности  │ level              │ INTEGER  │  4   │ DEFAULT 0    │
│                      │                    │          │      │ CHECK >= 0   │
│                      │                    │          │      │ INDEX        │
│ Порядок сортировки   │ sort_order         │ INTEGER  │  4   │ DEFAULT 0    │
│ Дата создания        │ created_at         │ TIMESTAMP│  -   │ DEFAULT NOW()│
└──────────────────────┴────────────────────┴──────────┴──────┴──────────────┘

Первичный ключ (PK): id
Внешние ключи (FK): 
  - parent_id REFERENCES categories(id) ON DELETE CASCADE

Индексы:
  - idx_categories_parent ON (parent_id)
  - idx_categories_level ON (level)

Ограничения целостности:
  - CHECK (level >= 0)
  - parent_id = NULL для корневых категорий
  - parent_id ссылается на существующую категорию

Примечание: Самосвязь (self-referential) позволяет строить иерархию любой
глубины. Используйте Recursive CTE для получения всего дерева.


═══════════════════════════════════════════════════════════════════════════════
3. ТАБЛИЦА: products (Номенклатура товаров)
═══════════════════════════════════════════════════════════════════════════════

Назначение: Хранение информации о товарах (номенклатуре)

┌──────────────────────┬────────────────────┬──────────┬──────┬──────────────┐
│ Наименование         │ Идентификатор      │ Тип      │ Длина│ Ограничения  │
│ реквизита            │                    │          │      │ и комментарий│
├──────────────────────┼────────────────────┼──────────┼──────┼──────────────┤
│ ID товара            │ id                 │ BIGSERIAL│  8   │ PK, NOT NULL │
│ Наименование         │ name               │ VARCHAR  │ 255  │ NOT NULL     │
│                      │                    │          │      │ INDEX        │
│ Количество           │ quantity           │ NUMERIC  │ 15,3 │ NOT NULL     │
│                      │                    │          │      │ DEFAULT 0    │
│                      │                    │          │      │ CHECK >= 0   │
│ Цена                 │ price              │ NUMERIC  │ 15,2 │ NOT NULL     │
│                      │                    │          │      │ CHECK >= 0   │
│ Единица измерения    │ unit               │ VARCHAR  │  50  │ DEFAULT 'шт' │
│ Описание             │ description        │ TEXT     │  -   │ NULL         │
│ Артикул (SKU)        │ sku                │ VARCHAR  │ 100  │ UNIQUE       │
│                      │                    │          │      │ INDEX        │
│ Активен              │ is_active          │ BOOLEAN  │  1   │ DEFAULT TRUE │
│                      │                    │          │      │ INDEX        │
│ Дата создания        │ created_at         │ TIMESTAMP│  -   │ DEFAULT NOW()│
│ Дата обновления      │ updated_at         │ TIMESTAMP│  -   │ DEFAULT NOW()│
└──────────────────────┴────────────────────┴──────────┴──────┴──────────────┘

Первичный ключ (PK): id
Уникальные ключи: sku

Индексы:
  - idx_products_name ON (name)
  - idx_products_sku ON (sku)
  - idx_products_active ON (is_active)

Ограничения целостности:
  - CHECK (quantity >= 0)
  - CHECK (price >= 0)
  - UNIQUE (sku)


═══════════════════════════════════════════════════════════════════════════════
4. ТАБЛИЦА: product_categories (Связь товаров с категориями)
═══════════════════════════════════════════════════════════════════════════════

Назначение: Связь Many-to-Many между товарами и категориями
Примечание: Junction table (промежуточная таблица)

┌──────────────────────┬────────────────────┬──────────┬──────┬──────────────┐
│ Наименование         │ Идентификатор      │ Тип      │ Длина│ Ограничения  │
│ реквизита            │                    │          │      │ и комментарий│
├──────────────────────┼────────────────────┼──────────┼──────┼──────────────┤
│ ID товара            │ product_id         │ BIGINT   │  8   │ PK, FK       │
│                      │                    │          │      │ NOT NULL     │
│                      │                    │          │      │ REFERENCES   │
│                      │                    │          │      │ products     │
│                      │                    │          │      │ ON DELETE    │
│                      │                    │          │      │ CASCADE      │
│                      │                    │          │      │ INDEX        │
│ ID категории         │ category_id        │ BIGINT   │  8   │ PK, FK       │
│                      │                    │          │      │ NOT NULL     │
│                      │                    │          │      │ REFERENCES   │
│                      │                    │          │      │ categories   │
│                      │                    │          │      │ ON DELETE    │
│                      │                    │          │      │ CASCADE      │
│                      │                    │          │      │ INDEX        │
│ Основная категория   │ is_primary         │ BOOLEAN  │  1   │ DEFAULT FALSE│
└──────────────────────┴────────────────────┴──────────┴──────┴──────────────┘

Первичный ключ (PK): (product_id, category_id)
Внешние ключи (FK):
  - product_id REFERENCES products(id) ON DELETE CASCADE
  - category_id REFERENCES categories(id) ON DELETE CASCADE

Индексы:
  - idx_product_categories_product ON (product_id)
  - idx_product_categories_category ON (category_id)


═══════════════════════════════════════════════════════════════════════════════
5. ТАБЛИЦА: orders (Заказы покупателей)
═══════════════════════════════════════════════════════════════════════════════

Назначение: Заголовок заказа с итоговыми суммами

┌──────────────────────┬────────────────────┬──────────┬──────┬──────────────┐
│ Наименование         │ Идентификатор      │ Тип      │ Длина│ Ограничения  │
│ реквизита            │                    │          │      │ и комментарий│
├──────────────────────┼────────────────────┼──────────┼──────┼──────────────┤
│ ID заказа            │ id                 │ BIGSERIAL│  8   │ PK, NOT NULL │
│ Номер заказа         │ order_number       │ VARCHAR  │  50  │ UNIQUE       │
│                      │                    │          │      │ NOT NULL     │
│                      │                    │          │      │ INDEX        │
│ ID клиента           │ customer_id        │ BIGINT   │  8   │ FK, NOT NULL │
│                      │                    │          │      │ REFERENCES   │
│                      │                    │          │      │ customers    │
│                      │                    │          │      │ ON DELETE    │
│                      │                    │          │      │ RESTRICT     │
│                      │                    │          │      │ INDEX        │
│ Дата заказа          │ order_date         │ TIMESTAMP│  -   │ DEFAULT NOW()│
│                      │                    │          │      │ INDEX        │
│ Дата доставки        │ delivery_date      │ DATE     │  -   │ NULL         │
│ Статус заказа        │ status             │ VARCHAR  │  50  │ NOT NULL     │
│                      │                    │          │      │ DEFAULT      │
│                      │                    │          │      │ 'новый'      │
│                      │                    │          │      │ CHECK        │
│                      │                    │          │      │ INDEX        │
│ Сумма товаров        │ total_amount       │ NUMERIC  │ 15,2 │ DEFAULT 0    │
│                      │                    │          │      │ CHECK >= 0   │
│ Сумма скидки         │ discount_amount    │ NUMERIC  │ 15,2 │ DEFAULT 0    │
│                      │                    │          │      │ CHECK >= 0   │
│ Сумма налога         │ tax_amount         │ NUMERIC  │ 15,2 │ DEFAULT 0    │
│                      │                    │          │      │ CHECK >= 0   │
│ Итоговая сумма       │ final_amount       │ NUMERIC  │ 15,2 │ DEFAULT 0    │
│                      │                    │          │      │ CHECK >= 0   │
│ Примечания           │ notes              │ TEXT     │  -   │ NULL         │
│ Дата создания        │ created_at         │ TIMESTAMP│  -   │ DEFAULT NOW()│
│ Дата обновления      │ updated_at         │ TIMESTAMP│  -   │ DEFAULT NOW()│
└──────────────────────┴────────────────────┴──────────┴──────┴──────────────┘

Первичный ключ (PK): id
Уникальные ключи: order_number
Внешние ключи (FK):
  - customer_id REFERENCES customers(id) ON DELETE RESTRICT

Индексы:
  - idx_orders_customer ON (customer_id)
  - idx_orders_date ON (order_date)
  - idx_orders_status ON (status)
  - idx_orders_number ON (order_number)

Ограничения целостности:
  - CHECK (status IN ('новый', 'обработка', 'отправлен', 'доставлен', 'отменен'))
  - CHECK (total_amount >= 0)
  - CHECK (discount_amount >= 0)
  - CHECK (tax_amount >= 0)
  - CHECK (final_amount >= 0)
  - UNIQUE (order_number)

Примечание: ON DELETE RESTRICT предотвращает удаление клиента, если у него
есть заказы. Денормализованные поля (total_amount, final_amount) для
производительности отчетов.


═══════════════════════════════════════════════════════════════════════════════
6. ТАБЛИЦА: order_items (Позиции заказа)
═══════════════════════════════════════════════════════════════════════════════

Назначение: Строки заказа (список товаров в заказе)

┌──────────────────────┬────────────────────┬──────────┬──────┬──────────────┐
│ Наименование         │ Идентификатор      │ Тип      │ Длина│ Ограничения  │
│ реквизита            │                    │          │      │ и комментарий│
├──────────────────────┼────────────────────┼──────────┼──────┼──────────────┤
│ ID позиции           │ id                 │ BIGSERIAL│  8   │ PK, NOT NULL │
│ ID заказа            │ order_id           │ BIGINT   │  8   │ FK, NOT NULL │
│                      │                    │          │      │ REFERENCES   │
│                      │                    │          │      │ orders       │
│                      │                    │          │      │ ON DELETE    │
│                      │                    │          │      │ CASCADE      │
│                      │                    │          │      │ INDEX        │
│ ID товара            │ product_id         │ BIGINT   │  8   │ FK, NOT NULL │
│                      │                    │          │      │ REFERENCES   │
│                      │                    │          │      │ products     │
│                      │                    │          │      │ ON DELETE    │
│                      │                    │          │      │ RESTRICT     │
│                      │                    │          │      │ INDEX        │
│ Количество           │ quantity           │ NUMERIC  │ 15,3 │ NOT NULL     │
│                      │                    │          │      │ CHECK > 0    │
│ Цена за единицу      │ unit_price         │ NUMERIC  │ 15,2 │ NOT NULL     │
│ (историческая)       │                    │          │      │ CHECK >= 0   │
│ Процент скидки       │ discount_percent   │ NUMERIC  │  5,2 │ DEFAULT 0    │
│                      │                    │          │      │ CHECK 0-100  │
│ Сумма скидки         │ discount_amount    │ NUMERIC  │ 15,2 │ DEFAULT 0    │
│                      │                    │          │      │ CHECK >= 0   │
│ Процент налога       │ tax_percent        │ NUMERIC  │  5,2 │ DEFAULT 0    │
│                      │                    │          │      │ CHECK 0-100  │
│ Сумма налога         │ tax_amount         │ NUMERIC  │ 15,2 │ DEFAULT 0    │
│                      │                    │          │      │ CHECK >= 0   │
│ Итого по строке      │ line_total         │ NUMERIC  │ 15,2 │ NOT NULL     │
│                      │                    │          │      │ CHECK >= 0   │
│ Примечания           │ notes              │ TEXT     │  -   │ NULL         │
│ Дата создания        │ created_at         │ TIMESTAMP│  -   │ DEFAULT NOW()│
└──────────────────────┴────────────────────┴──────────┴──────┴──────────────┘

Первичный ключ (PK): id
Внешние ключи (FK):
  - order_id REFERENCES orders(id) ON DELETE CASCADE
  - product_id REFERENCES products(id) ON DELETE RESTRICT

Индексы:
  - idx_order_items_order ON (order_id)
  - idx_order_items_product ON (product_id)

Ограничения целостности:
  - CHECK (quantity > 0)
  - CHECK (unit_price >= 0)
  - CHECK (discount_percent >= 0 AND discount_percent <= 100)
  - CHECK (discount_amount >= 0)
  - CHECK (tax_percent >= 0 AND tax_percent <= 100)
  - CHECK (tax_amount >= 0)
  - CHECK (line_total >= 0)

Примечание: unit_price хранит цену НА МОМЕНТ ЗАКАЗА для исторической точности
и аудита. ON DELETE RESTRICT предотвращает удаление товара из позиции заказа.
ON DELETE CASCADE - при удалении заказа удаляются все его позиции.


═══════════════════════════════════════════════════════════════════════════════
ДИАГРАММА СВЯЗЕЙ МЕЖДУ ТАБЛИЦАМИ
═══════════════════════════════════════════════════════════════════════════════

                                    ┌─────────────────┐
                                    │   categories    │
                                    ├─────────────────┤
                          ┌────────┤│ PK: id          │
                          │         │ FK: parent_id ───┐
                          │         │     name        ││
                          │         │     level       ││
                          │         └─────────────────┘│
                          │                            │
                          │                            │ Self-reference
                          │                            │ (parent_id)
                          │                            │
                          │                            └────────┐
                          │                                     │
                          │                                     ▼
        ┌─────────────────┴────────┐              ┌─────────────────┐
        │  product_categories      │              │   categories    │
        │    (Junction Table)      │              └─────────────────┘
        ├──────────────────────────┤
        │ PK: product_id,          │
        │     category_id          │
        │ FK: product_id           │───┐
        │ FK: category_id          │───┼───────────────┐
        │     is_primary           │   │               │
        └──────────────────────────┘   │               │
                                       │               │
                                       │               │
        ┌──────────────────────────────▼───┐           │
        │         products                 │           │
        ├──────────────────────────────────┤           │
        │ PK: id                           │           │
        │     name                         │           │
        │     quantity                     │           │
        │     price                        │           │
        │     sku (UNIQUE)                 │           │
        └──────────────────────────────────┘           │
                       │                               │
                       │ 1:N                           │ N:M
                       │                               │
                       ▼                               │
        ┌──────────────────────────────────┐           │
        │       order_items                │           │
        ├──────────────────────────────────┤           │
        │ PK: id                           │           │
        │ FK: order_id                     │───┐       │
        │ FK: product_id                   │   │       │
        │     quantity                     │   │       │
        │     unit_price (historical)      │   │       │
        │     discount_amount              │   │       │
        │     tax_amount                   │   │       │
        │     line_total                   │   │       │
        └──────────────────────────────────┘   │       │
                                               │       │
                                          N:1  │       │
                                               │       │
                       ┌───────────────────────▼───────┴───────┐
                       │           orders                      │
                       ├───────────────────────────────────────┤
                       │ PK: id                                │
                       │     order_number (UNIQUE)             │
                       │ FK: customer_id                       │───┐
                       │     order_date                        │   │
                       │     status                            │   │
                       │     total_amount                      │   │
                       │     discount_amount                   │   │
                       │     tax_amount                        │   │
                       │     final_amount                      │   │
                       └───────────────────────────────────────┘   │
                                                                   │
                                                              N:1  │
                                                                   │
                                         ┌─────────────────────────▼─────┐
                                         │         customers            │
                                         ├──────────────────────────────┤
                                         │ PK: id                       │
                                         │     name                     │
                                         │     address                  │
                                         │     email                    │
                                         │     customer_type            │
                                         │     inn, kpp                 │
                                         └──────────────────────────────┘


═══════════════════════════════════════════════════════════════════════════════
ТИПЫ СВЯЗЕЙ
═══════════════════════════════════════════════════════════════════════════════

1. customers → orders
   Тип: 1:N (один ко многим)
   Описание: Один клиент может иметь много заказов
   Реализация: orders.customer_id REFERENCES customers.id

2. orders → order_items
   Тип: 1:N (один ко многим)
   Описание: Один заказ содержит много позиций
   Реализация: order_items.order_id REFERENCES orders.id

3. products → order_items
   Тип: 1:N (один ко многим)
   Описание: Один товар может быть в нескольких позициях заказов
   Реализация: order_items.product_id REFERENCES products.id

4. products ↔ categories
   Тип: N:M (многие ко многим)
   Описание: Товар может быть в нескольких категориях, категория содержит
             несколько товаров
   Реализация: Через промежуточную таблицу product_categories

5. categories → categories
   Тип: Self-referential (самосвязь)
   Описание: Категория может иметь родительскую категорию (иерархия)
   Реализация: categories.parent_id REFERENCES categories.id


═══════════════════════════════════════════════════════════════════════════════
ПОЛИТИКИ УДАЛЕНИЯ (ON DELETE)
═══════════════════════════════════════════════════════════════════════════════

CASCADE (каскадное удаление):
  - categories.parent_id → При удалении категории удаляются все подкатегории
  - product_categories → При удалении товара/категории удаляется связь
  - order_items.order_id → При удалении заказа удаляются все его позиции

RESTRICT (запрет удаления):
  - orders.customer_id → Нельзя удалить клиента если у него есть заказы
  - order_items.product_id → Нельзя удалить товар если он в заказе


═══════════════════════════════════════════════════════════════════════════════
ИНДЕКСЫ ДЛЯ ПРОИЗВОДИТЕЛЬНОСТИ
═══════════════════════════════════════════════════════════════════════════════

Все внешние ключи индексированы для ускорения JOIN операций:
  - idx_orders_customer ON orders(customer_id)
  - idx_order_items_order ON order_items(order_id)
  - idx_order_items_product ON order_items(product_id)
  - idx_categories_parent ON categories(parent_id)
  - idx_product_categories_product ON product_categories(product_id)
  - idx_product_categories_category ON product_categories(category_id)

Дополнительные индексы для частых запросов:
  - idx_customers_name, idx_customers_email - поиск клиентов
  - idx_products_name, idx_products_sku - поиск товаров
  - idx_orders_date, idx_orders_status - фильтрация заказов
  - idx_categories_level - работа с иерархией


═══════════════════════════════════════════════════════════════════════════════
ОБОСНОВАНИЕ АРХИТЕКТУРНЫХ РЕШЕНИЙ
═══════════════════════════════════════════════════════════════════════════════

1. Adjacency List для иерархии категорий
   ✅ Простота реализации и поддержки
   ✅ PostgreSQL отлично работает с Recursive CTE
   ✅ Быстрые операции INSERT/UPDATE
   ✅ Минимальный расход дисковой памяти

2. Many-to-Many для товаров и категорий
   ✅ Гибкость: товар может быть в нескольких категориях
   ✅ Флаг is_primary для определения основной категории
   ✅ Стандартный паттерн junction table

3. Денормализация сумм в orders
   ✅ Производительность отчетов и аналитики
   ✅ Избежание пересчета при каждом запросе
   ✅ Стандарт для ERP систем

4. Историческая цена в order_items
   ✅ Аудит и соответствие требованиям бухгалтерии
   ✅ Цены могут меняться после оформления заказа
   ✅ Необходимо для правильных отчетов

5. CHECK constraints
   ✅ Защита от некорректных данных на уровне БД
   ✅ Гарантия целостности данных
   ✅ Независимость от логики приложения


═══════════════════════════════════════════════════════════════════════════════
ПРИМЕРЫ ТИПОВЫХ ЗАПРОСОВ
═══════════════════════════════════════════════════════════════════════════════

1. Получение всего дерева категорий:
   WITH RECURSIVE category_tree AS (...)

2. Получение всех товаров категории (включая подкатегории):
   WITH RECURSIVE category_subtree AS (...)

3. Получение заказа со всеми позициями:
   SELECT * FROM orders o
   JOIN order_items oi ON o.id = oi.order_id
   JOIN products p ON oi.product_id = p.id

4. Статистика по клиентам:
   SELECT customer_id, COUNT(*) as orders_count, SUM(final_amount)
   FROM orders GROUP BY customer_id


═══════════════════════════════════════════════════════════════════════════════
ЗАКЛЮЧЕНИЕ
═══════════════════════════════════════════════════════════════════════════════

Даталогическая модель спроектирована с учетом:
✅ Нормализации данных (3NF)
✅ Производительности (индексы, денормализация где нужно)
✅ Целостности данных (FK, CHECK, UNIQUE)
✅ Масштабируемости (иерархия любой глубины)
✅ Best practices для ERP систем
✅ Специфики PostgreSQL

Модель готова к физической реализации в PostgreSQL СУБД.
